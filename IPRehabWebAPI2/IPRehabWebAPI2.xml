<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IPRehabWebAPI2</name>
    </assembly>
    <members>
        <member name="M:IPRehabWebAPI2.Controllers.AnswerController.#ctor(IPRehabWebAPI2.Helpers.AnswerHelper)">
            <summary>
            inject AnserHelper
            </summary>
            <param name="answerHelper"></param>
        </member>
        <member name="M:IPRehabWebAPI2.Controllers.AnswerController.PostNewEpisodeAsync(IPRehabWebAPI2.Models.PostbackModel)">
            <summary>
            Create new episode when episode id is -1.  Only look into PostbackModel.NewAnswers collection.
            </summary>
            <param name="postbackModel"></param>
            <returns></returns>
        </member>
        <member name="M:IPRehabWebAPI2.Controllers.MasterReportsUserController.GetUserPermission(System.String)">
            <summary>
            get user by executing stored procedure at MasterReports.uspVSSCMain_SelectAccessInformationFromNSSD
            </summary>
            <param name="networkID"></param>
            <returns></returns>
        </member>
        <member name="M:IPRehabWebAPI2.Controllers.TreatingSpecialtyPatientController.GetPatients(System.String,System.String,System.Boolean,System.String,System.Int32,System.Int32)">
            <summary>
            get patients matching the search criteria with visibility by the user facility level
            </summary>
            <param name="networkID"></param>
            <param name="criteria"></param>
            <param name="withEpisode"></param>
            <param name="orderBy"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:IPRehabWebAPI2.Controllers.TreatingSpecialtyPatientController.GetPatient(System.String,System.String,System.Boolean,System.String,System.Int32,System.Int32)">
            <summary>
            get only meta data of an individual patient by id
            </summary>
            <param name="patientID"></param>
            <param name="networkID"></param>
            <param name="withEpisode"></param>
            <param name="orderBy"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:IPRehabWebAPI2.Controllers.TreatingSpecialtyPatientController.GetPatient(System.Int32)">
            <summary>
            Get individual patient by episode since patient ID and patient name cannot be used in querystring
            For new episode use [HttpGet("{patientID}")] endpoint.
            </summary>
            <param name="episodeID"></param>
            <returns></returns>
        </member>
        <member name="M:IPRehabWebAPI2.Helpers.AnswerHelper.#ctor(IPRehabModel.IPRehabContext,IPRehabRepository.Contracts.IAnswerRepository)">
            <summary>
            constructor injection of IPRehabContext in order to use _ipRehabContext transaction
            </summary>
            <param name="iPRehabContext"></param>
            <param name="answerRepository"></param>
        </member>
        <member name="M:IPRehabWebAPI2.Helpers.AnswerHelper.TransactionalInsertNewEpisodeAsync(System.String,System.Collections.Generic.List{IPRehabWebAPI2.Models.UserAnswer})">
            <summary>
            add new episode and new answers
            </summary>
            <param name="FacilityID"></param>
            <param name="newAnswers"></param>
            <returns></returns>
        </member>
        <member name="M:IPRehabWebAPI2.Helpers.AnswerHelper.TransactionalInsertNewAnswerOnlyAsync(System.Int32,System.Collections.Generic.List{IPRehabWebAPI2.Models.UserAnswer})">
            <summary>
            add only new answers to exisitng episode
            </summary>
            <param name="thisEpisodeID"></param>
            <param name="newAnswers"></param>
            <returns></returns>
        </member>
        <member name="M:IPRehabWebAPI2.Helpers.AnswerHelper.TransactionalUpdateAnswerAsync(System.Int32,System.Collections.Generic.List{IPRehabWebAPI2.Models.UserAnswer})">
            <summary>
            update both existing episode and answers
            </summary>
            <param name="thisEpisodeID"></param>
            <param name="udatedAnswers"></param>
            <returns></returns>
        </member>
        <member name="M:IPRehabWebAPI2.Helpers.AnswerHelper.TransactionalDeleteAsync(System.Int32,System.Collections.Generic.List{IPRehabWebAPI2.Models.UserAnswer})">
            <summary>
            delete answers, and delte this episode when all answers are deleted
            </summary>
            <param name="thisEpisodeID"></param>
            <param name="oldAnswers"></param>
            <returns></returns>
        </member>
        <member name="T:IPRehabWebAPI2.Helpers.ExceptionMiddlewareExtension">
            <summary>
            extends IApplicationBuilder
            </summary>
        </member>
        <member name="T:IPRehabWebAPI2.Helpers.HydrateDTO">
            <summary>
            Hydrate the DTO with selected domain properties
            </summary>
        </member>
        <member name="M:IPRehabWebAPI2.Helpers.UserPatientCacheHelper.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Caching.Memory.IMemoryCache,UserModel.MasterreportsContext,IPRehabRepository.Contracts.IEpisodeOfCareRepository,IPRehabRepository.Contracts.ITreatingSpecialtyPatientRepository)">
            <summary>
            constructor injection of MasterreportsContext in order to execute _context.SqlQueryAsync()
            </summary>
            <param name="configuration"></param>
            <param name="memoryCache"></param>
            <param name="masterReportsContext"></param>
            <param name="episodeRepository"></param>
            <param name="treatingSpecialtyPatientRepository"></param>
        </member>
        <member name="M:IPRehabWebAPI2.Helpers.UserPatientCacheHelper.GetUserAccessLevels(System.String)">
            <summary>
            Do not use generic repository, instead use MastReportsContext to execute stored procedure to get user access levels
            </summary>
            <param name="networkID"></param>
            <returns></returns>
        </member>
        <member name="M:IPRehabWebAPI2.Helpers.UserPatientCacheHelper.GetPatients(System.Collections.Generic.List{IPRehabWebAPI2.Models.MastUserDTO},System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            get patients from Treating Specialty using ITreatingSpecialtyPatientRepository
            </summary>
            <param name="distinctUserFacilities"></param>
            <param name="criteria"></param>
            <param name="orderBy"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="patientID"></param>
            <returns></returns>
        </member>
        <member name="M:IPRehabWebAPI2.Helpers.UserPatientCacheHelper.GetPatientByEpisode(System.Int32)">
            <summary>
            get patient by Episode ID from Treating Specialty
            </summary>
            <param name="episodeID"></param>
            <returns></returns>
        </member>
        <member name="M:IPRehabWebAPI2.Helpers.UserPatientCacheHelper.CleanUserName(System.String)">
            <summary>
            this should be in a utility library
            </summary>
            <param name="networkID"></param>
            <returns></returns>
        </member>
        <member name="M:IPRehabWebAPI2.Helpers.UserPatientCacheHelper.GetAllFacilityPatients">
            <summary>
            get the treating speciatlty patients cohort base from session, otherwise get them from the WebAPI
            </summary>
            <returns></returns>
        </member>
        <member name="P:IPRehabWebAPI2.Models.AnswerDTO.AnswerID">
            <summary>
            record key
            </summary>
        </member>
        <member name="P:IPRehabWebAPI2.Models.UserAnswer.PatientName">
            <summary>
            not peristable, inspection only
            </summary>
        </member>
        <member name="P:IPRehabWebAPI2.Models.UserAnswer.PatientID">
            <summary>
            peristable, inspection only
            </summary>
        </member>
        <member name="P:IPRehabWebAPI2.Models.UserAnswer.AnswerID">
            <summary>
            peristable
            </summary>
        </member>
        <member name="P:IPRehabWebAPI2.Models.UserAnswer.EpisodeID">
            <summary>
            peristable, foreign key to episode identifiers 
            </summary>
        </member>
        <member name="P:IPRehabWebAPI2.Models.UserAnswer.OnsetDate">
            <summary>
            peristable, episode onset date
            </summary>
        </member>
        <member name="P:IPRehabWebAPI2.Models.UserAnswer.AdmissionDate">
            <summary>
            peristable, e[ospde admission date
            </summary>
        </member>
        <member name="P:IPRehabWebAPI2.Models.UserAnswer.QuestionID">
            <summary>
            peristable, foreign key to question identifier 
            </summary>
        </member>
        <member name="P:IPRehabWebAPI2.Models.UserAnswer.QuestionKey">
            <summary>
            not peristable, for inspection only
            </summary>
        </member>
        <member name="P:IPRehabWebAPI2.Models.UserAnswer.MeasureID">
            <summary>
            peristable, foreign key to stage identifier for inspection only
            </summary>
        </member>
        <member name="P:IPRehabWebAPI2.Models.UserAnswer.MeasureName">
            <summary>
            not peristable, for inspection only
            </summary>
        </member>
        <member name="P:IPRehabWebAPI2.Models.UserAnswer.AnswerCodeSetID">
            <summary>
            peristable, foreign key to codeset id  
            </summary>
        </member>
        <member name="P:IPRehabWebAPI2.Models.UserAnswer.AnswerCodeSetDescription">
            <summary>
            not peristable, for inspection only to ensure the the AnswerCodeSet is correct  
            </summary>
        </member>
        <member name="P:IPRehabWebAPI2.Models.UserAnswer.AnswerSequenceNumber">
            <summary>
            peristable, unique identifier for multi-answer questions
            </summary>
        </member>
        <member name="P:IPRehabWebAPI2.Models.UserAnswer.Description">
            <summary>
            persistable, only required for text (date, ICD), number (therapy Hours, ), or text area type
            </summary>
        </member>
        <member name="P:IPRehabWebAPI2.Models.UserAnswer.AnswerByUserID">
            <summary>
            persistable, user network ID
            </summary>
        </member>
        <member name="P:IPRehabWebAPI2.Models.UserAnswer.LastUpdate">
            <summary>
            persistable, date of the answer
            </summary>
        </member>
        <member name="P:IPRehabWebAPI2.Models.QuestionDTO.Enabled">
            <summary>
            set the Enabled property to false, if this question is dependent on another question's answers and if other question(s) determines to false 
            set it to true, if this question is not dependent on another question's answers 
            </summary>
        </member>
        <member name="P:IPRehabWebAPI2.Models.QuestionDTO.Answers">
            <summary>
            Each question has primarily a single answer but can be multiple such as ICD, Interrupt Dates
            </summary>
        </member>
    </members>
</doc>
