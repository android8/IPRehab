// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace PatientModel_TreatingSpecialty;

public partial class DMTreatingSpecialtyContext : DbContext
{
    public DMTreatingSpecialtyContext(DbContextOptions<DMTreatingSpecialtyContext> options)
        : base(options)
    {
    }

    public virtual DbSet<PatientDemographic> PatientDemographic { get; set; }

    public virtual DbSet<RptRehabDetails> RptRehabDetails { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<PatientDemographic>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("patient_demographic");

            entity.HasIndex(e => new { e.ScrSsn, e.Scrnum }, "NonClusteredIndex-20230913-161241");

            entity.Property(e => e.Address1)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.Address2)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.Address3)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.CdwpossibleTestPatientFlag)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("CDWPossibleTestPatientFlag");
            entity.Property(e => e.City)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Country)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("country");
            entity.Property(e => e.County)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.DoB).HasColumnType("datetime");
            entity.Property(e => e.DoD).HasColumnType("datetime");
            entity.Property(e => e.Edipi)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("EDIPI");
            entity.Property(e => e.Eligibility)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.FirstName)
                .HasMaxLength(75)
                .IsUnicode(false)
                .HasColumnName("First_Name");
            entity.Property(e => e.InsuranceCoverageFlag)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LastName)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("Last_Name");
            entity.Property(e => e.OefoifFlagKey).HasColumnName("OEFOIF_FlagKey");
            entity.Property(e => e.PatientIcn)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PatientICN");
            entity.Property(e => e.PatientName)
                .HasMaxLength(120)
                .IsUnicode(false);
            entity.Property(e => e.PatientSsn)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PatientSSN");
            entity.Property(e => e.PeriodofService)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Prio18)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasColumnName("PRIO1_8");
            entity.Property(e => e.Pskey).HasColumnName("PSKey");
            entity.Property(e => e.ScrSsn)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ScrSSN");
            entity.Property(e => e.Scrnum)
                .HasMaxLength(51)
                .IsUnicode(false)
                .HasColumnName("SCRNUM");
            entity.Property(e => e.SigenderKey).HasColumnName("SIGenderKey");
            entity.Property(e => e.StateProvince)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("State_Province");
            entity.Property(e => e.TestPatientFlag)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Urh)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("URH");
            entity.Property(e => e.Zip)
                .HasMaxLength(10)
                .IsUnicode(false);
        });

        modelBuilder.Entity<RptRehabDetails>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("rptRehabDetails");

            entity.Property(e => e.Admission).HasColumnName("admission");
            entity.Property(e => e.Admitday)
                .HasColumnType("datetime")
                .HasColumnName("admitday");
            entity.Property(e => e.Bedsecn).HasColumnName("bedsecn");
            entity.Property(e => e.Bsta6a)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("bsta6a");
            entity.Property(e => e.DoB).HasColumnType("datetime");
            entity.Property(e => e.FirstName)
                .HasMaxLength(75)
                .IsUnicode(false)
                .HasColumnName("First_Name");
            entity.Property(e => e.LastName)
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasColumnName("Last_Name");
            entity.Property(e => e.PatientIcn)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PatientICN");
            entity.Property(e => e.PatientName)
                .HasMaxLength(120)
                .IsUnicode(false);
            entity.Property(e => e.Realssn)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.ScrSsnt)
                .HasMaxLength(38)
                .IsUnicode(false)
                .HasColumnName("ScrSSNT");
            entity.Property(e => e.Scrnum).HasColumnName("scrnum");
            entity.Property(e => e.ScrssnT).HasColumnName("scrssn");
            entity.Property(e => e.Sta3)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("sta3");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}