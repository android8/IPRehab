<style>
  label, input {
    display: block;
  }

    input.text {
      margin-bottom: 12px;
      width: 95%;
      padding: .4em;
    }

  fieldset {
    padding: 0;
    border: 0;
    margin-top: 25px;
  }

  h1 {
    font-size: 1.2em;
    margin: .6em 0;
  }

  .ui-dialog .ui-state-error {
    padding: .3em;
  }

  .validateTips {
    border: 1px solid transparent;
    padding: 0.3em;
  }
</style>

<div id="dialog-form" title="Create new episode">
  <p class="validateTips">All form fields are required.</p>

  <form>
    <fieldset>
      <label for="patientICN">Patient ICN</label>
      <input type="text" name="patientICN" id="patientICN" value="@Model.Patient.PatientICNFK" class="text ui-widget-content ui-corner-all" disabled>
      <label for="patientName">Patient Name</label>
      <input type="text" name="patientName" id="patientName" value="@Model.Patient.Name" class="text ui-widget-content ui-corner-all" disabled>
      <label for="onsetDate">Onset Date</label>
      <input type="text" name="onsetDate" id="onsetDate" value="@Model.Answer.OnsetDate" class="text ui-widget-content ui-corner-all">
      <label for="admissionDate">admissionDate</label>
      <input type="text" name="admissionDate" id="admissionDate" value="@Model.Answer.AdmissionDate" class="text ui-widget-content ui-corner-all">

      <!-- Allow form submission with keyboard without duplicating the dialog button -->
      <input type="submit" tabindex="-1" style="position:absolute; top:-1000px">
    </fieldset>
  </form>
</div>

@section Scripts {
<script>
  $( function() {
    var dialog, form,

      // From http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#e-mail-state-%28type=email%29
      emailRegex = /^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,
      patientICN = $("#patientICN"),
      patientName = $( "##patientName" ),
      onsetDate = $("#onsetDate"),
      admissionDate = $("#admissionDate"),
      allFields = $([]).add(patientICN).add(patientName).add(onsetDate).add(admissionDate),
      tips = $( ".validateTips" );

    function updateTips( t ) {
      tips
        .text( t )
        .addClass( "ui-state-highlight" );
      setTimeout(function() {
        tips.removeClass( "ui-state-highlight", 1500 );
      }, 500 );
    }

    function checkLength( o, n, min, max ) {
      if ( o.val().length > max || o.val().length < min ) {
        o.addClass( "ui-state-error" );
        updateTips( "Length of " + n + " must be between " +
          min + " and " + max + "." );
        return false;
      } else {
        return true;
      }
    }

    function checkRegexp( o, regexp, n ) {
      if ( !( regexp.test( o.val() ) ) ) {
        o.addClass( "ui-state-error" );
        updateTips( n );
        return false;
      } else {
        return true;
      }
    }

    function addEpisodeKey() {
      var valid = true;
      allFields.removeClass( "ui-state-error" );

      //valid = valid && checkLength( name, "username", 3, 16 );
      //valid = valid && checkLength( email, "email", 6, 80 );
      //valid = valid && checkLength( password, "password", 5, 16 );

      valid = valid && checkRegexp( name, /^[a-z]([0-9a-z_\s])+$/i, "Username may consist of a-z, 0-9, underscores, spaces and must begin with a letter." );
      //valid = valid && checkRegexp( email, emailRegex, "eg. ui@jquery.com" );
      //valid = valid && checkRegexp( password, /^([0-9a-zA-Z])+$/, "Password field only allow : a-z 0-9" );

      if ( valid ) {
        //$( "#users tbody" ).append( "<tr>" +
        //  "<td>" + name.val() + "</td>" +
        //  "<td>" + email.val() + "</td>" +
        //  "<td>" + password.val() + "</td>" +
        //"</tr>" );
        dialog.dialog( "close" );
      }
      return valid;
    }

    dialog = $( "#dialog-form" ).dialog({
      autoOpen: false,
      height: 400,
      width: 350,
      modal: true,
      buttons: {
        "Create an episode of care": addEpisodeKey,
        Cancel: function() {
          dialog.dialog( "close" );
        }
      },
      close: function() {
        form[ 0 ].reset();
        allFields.removeClass( "ui-state-error" );
      }
    });

    form = dialog.find( "form" ).on( "submit", function( event ) {
      event.preventDefault();
      addEpisodeKey();
    });

    $( "#create-user" ).button().on( "click", function() {
      dialog.dialog( "open" );
    });
  } );
</script>
}