@model ViewComponentTemplateModel
@{
  var thisItem = Model.ChoiceAndAnswerList.FirstOrDefault().SelectListItem;
  var originalAnswer = Model.ChoiceAndAnswerList.FirstOrDefault().Answer;
  bool displayStageHeader = Model.ViewComponentViewModel.DisplayStageHeader;
  string stageHeaderCssClass = Model.ViewComponentViewModel.StageHeaderBorderCssClass;
  string ContainerCssClass = Model.ViewComponentViewModel.ContainerCssClass;
  bool isMultiplChoices = Model.ViewComponentViewModel.MultipleChoices;
}

@* flex row for multi dates *@
<div class="@ContainerCssClass">
  @* flex column for each date header and date input pair *@
  <div class="flex-start-column-nowrap">
    @if (displayStageHeader)
    {
      @*prevent the next inner div to be flexed*@
      <div>
        <div class="@(stageHeaderCssClass)">@($"{Model.ViewComponentViewModel.StageTitle}")</div>
      </div>
    }
    <div class="flex-start-row-nowrap">
      <input type="date" max="@(DateTime.Today.ToString("yyyy-MM-dd"))"
             class="persistable"
             aria-labelledby="@($"{Model.ViewComponentViewModel.QuestionKey}_{Model.ViewComponentViewModel.StageTitle}_{Model.ViewComponentViewModel.ControlCounter}_label")"
             name="@Model.ViewComponentViewModel.QuestionKey"
             id="@($"{Model.ViewComponentViewModel.QuestionKey}_{Model.ViewComponentViewModel.StageTitle}_{Model.ViewComponentViewModel.ControlCounter}")"
             required="@(Model.ViewComponentViewModel.Required)"
             value="@(originalAnswer == null ? string.Empty : originalAnswer?.Description)"
             title="@(originalAnswer == null ? string.Empty : $" Answered by {originalAnswer.ByUser}")"
             data-oldvalue="@(originalAnswer == null ? " " : originalAnswer?.Description)"
             data-codesetid="@(thisItem.Value)"
             data-questionid="@(Model.ViewComponentViewModel.QuestionID)"
             data-questionkey="@(Model.ViewComponentViewModel.QuestionKey)"
             data-userid="@(Model.ViewComponentViewModel.UserID)"
             data-episodeid="@(originalAnswer == null ? "" : originalAnswer.EpisodeOfCare.EpisodeOfCareID)"
             data-answerSequence="@(originalAnswer == null ? "" : originalAnswer.AnswerSequenceNumber)"
             data-toggle="tooltip"
             data-placement="left" />
      <label class="" id="@($"{Model.ViewComponentViewModel.QuestionKey}_{Model.ViewComponentViewModel.StageTitle}_{Model.ViewComponentViewModel.ControlCounter}_label")"></label>
    </div>
  </div>
</div>