@model List<ChoiceAndAnswer>
@* create multiple checkboxes and set checked if any *@

<div class="flex-start-column-wrap">
  @if ((bool)ViewData["DisplayStageHeader"])
  {
    @*only the first questions in the group should display this stage header such as Admission Performance, Discharge Goal, etc*@
    <div class="stageHeader">@($"{ViewData["StageTitle"]}")</div>
  }

  @foreach (var item in Model)
  {
    /* each item in the ChoicesAnswers contains maximum of one choice codeSetID and, if answered, one answer.codeSetID */
    var originalAnswer = item.Answer;
    var isChecked = item.SelectListItem.Selected;

    <div class="mdc-form-field">
      <div class="mdc-checkbox">
        @if (originalAnswer != null)
        {
          <input type="checkbox" class="mdc-checkbox__native-control persistable"
                 name="@ViewData["QuestionKey"]"
                 id="@($"{ViewData["QuestionKey"]}_{ViewData["StageTitle"]}")"
                 value="@item.SelectListItem.Value"
                 checked @* the only difference here. HTML5 checked vs XHTML checked="checked" *@
                 data-questionid="@ViewData["QuestionID"]"
                 data-questionkey="@ViewData["QuestionKey"]"
                 data-userid="@ViewData["UserID"]"
                 data-useranswerid="@(originalAnswer == null ? "" : originalAnswer.EpisodeOfCare.EpisodeOfCareID)"
                 data-oldvalue="@(originalAnswer == null ? "" : originalAnswer.AnswerCodeSet.CodeValue)"
                 data-answersetid="@(originalAnswer == null ? "" : originalAnswer.AnswerSequenceNumber)"
                 data-toggle="tooltip"
                 data-placement="left"
                 title="@(originalAnswer == null ? string.Empty : $"Answered by {originalAnswer.ByUser}")">
        }
        else
        {
          <input type="checkbox" class="mdc-checkbox__native-control persistable"
                 name="@ViewData["QuestionKey"]"
                 id="@($"{ViewData["QuestionKey"]}_{ViewData["StageTitle"]}")"
                 value="@item.SelectListItem.Value"
                 data-questionid="@ViewData["QuestionID"]"
                 data-questionkey="@ViewData["QuestionKey"]"
                 data-userid="@ViewData["UserID"]"
                 data-useranswerid="@(originalAnswer == null ? "" : originalAnswer.EpisodeOfCare.EpisodeOfCareID)"
                 data-oldvalue="@(originalAnswer == null ? "" : originalAnswer.AnswerCodeSet.CodeValue)"
                 data-answersetid="@(originalAnswer == null ? "" : originalAnswer.AnswerSequenceNumber)"
                 data-toggle="tooltip"
                 data-placement="left"
                 title="@(originalAnswer == null ? string.Empty : $"Answered by {originalAnswer.ByUser}")">
        }
        <span asp-validataion-for="@($"{ViewData["QuestionKey"]}_{ViewData["StageTitle"]}")"></span>

        <div class="mdc-checkbox__background">
          <svg class="mdc-checkbox__checkmark"
               viewBox="0 0 24 24">
            <path class="mdc-checkbox__checkmark-path" fill="none" d="M1.73,12.91 8.1,19.28 22.79,4.59"></path>
            <title>Mateial icon</title>
          </svg>
          <div class="mdc-checkbox__mixedmark"></div>
        </div>
        <div class="mdc-checkbox__ripple"></div>
      </div>

      @*the labe is required by HTML5 specification*@
      <label for="@($"{ViewData["QuestionKey"]}_{ViewData["StageTitle"]}")" aria-label="label for dropdown left blank use the question text"></label>
    </div>
  }
</div>