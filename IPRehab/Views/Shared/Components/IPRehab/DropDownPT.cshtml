@model ViewComponentTemplateModel

@{
  AnswerDTO originalAnswer = null;
  ChoiceAndAnswer selectedItem = null;
  var thisChoiceAndAnswer = Model.ChoiceAndAnswerList.FirstOrDefault(x => x.Answer != null);
  if (thisChoiceAndAnswer != null)
  {
    if (thisChoiceAndAnswer.Answer != null)
    {
      originalAnswer = thisChoiceAndAnswer.Answer;
    }
  }
  bool displayStageHeader = Model.ViewComponentViewModel.DisplayStageHeader && !string.IsNullOrEmpty(Model.ViewComponentViewModel.StageTitle);
}

<div class="flex-start-column-nowrap">
  <div class="flex-start-row-nowrap">
    @*the labe is required by HTML5 specification*@
    <label for="@($"{Model.ViewComponentViewModel.QuestionKey}_{Model.ViewComponentViewModel.StageTitle}_{Model.ViewComponentViewModel.ControlCounter}")"
           id="@($"{Model.ViewComponentViewModel.QuestionKey}_{Model.ViewComponentViewModel.StageTitle}_{Model.ViewComponentViewModel.ControlCounter}_label")"
           class="nullLabel"></label>

    @if (displayStageHeader)
    {
      @*prevent the next inner div to be flexed*@
      <div>
        <div class="stageHeaderNoBottomBorder">@($"{Model.ViewComponentViewModel.StageTitle}")</div>
      </div>
    }

    <div>
      <select class="browser-default custom-select select2 dropdown persistable physical-therapy"
              name="@($"{Model.ViewComponentViewModel.QuestionKey}_{Model.ViewComponentViewModel.StageTitle}_{Model.ViewComponentViewModel.ControlCounter}")"
              id="@($"{Model.ViewComponentViewModel.QuestionKey}_{Model.ViewComponentViewModel.StageTitle}_{Model.ViewComponentViewModel.ControlCounter}")"
              required="@(Model.ViewComponentViewModel.Required)"
              data-questionid="@(Model.ViewComponentViewModel.QuestionID)"
              data-questionkey="@(Model.ViewComponentViewModel.QuestionKey)"
              data-userid="@(Model.ViewComponentViewModel.UserID)"
              data-useranswerid="@(originalAnswer == null ? string.Empty : originalAnswer.EpisodeOfCare.EpisodeOfCareID)"
              data-oldvalue="@(originalAnswer == null ? string.Empty : originalAnswer.AnswerCodeSet.CodeValue)"
              data-answersetid="@(originalAnswer == null ? string.Empty : originalAnswer.AnswerSequenceNumber)"
              data-toggle="tooltip"
              data-placement="left"
              title="@(originalAnswer == null ? "" : $"Answered by {originalAnswer.ByUser}")"
              aria-labelledby="@($"{Model.ViewComponentViewModel.QuestionKey}_{Model.ViewComponentViewModel.StageTitle}_{Model.ViewComponentViewModel.ControlCounter}_label")">

        @*text white on wite background to reduce clutter but is required*@
        <option>@($"select 1 of {Model.ChoiceAndAnswerList.Count}")</option>

        @foreach (var item in Model.ChoiceAndAnswerList)
        {
          if (item.SelectListItem.Selected)
          {
            selectedItem = item;
          }

          @* each item in the ChoicesAnswers contains maximum of one choice codeSetID and, if answered, one answer.codeSetID *@
          <option value="@(item.SelectListItem.Value)" selected="@(item.SelectListItem.Selected)">@(item.SelectListItem.Text)</option>
        }
      </select>

      @if (selectedItem != null)
      {
        <div class="longTextOption">@(selectedItem.SelectListItem.Text)</div>
      }
      else
      {
        <div class="longTextOption invisible"></div>
      }
    </div>

    @* Hours of Therapy *@
    <div class="flex-start-column-nowrap">
      <div class="stageHeaderNoBottomBorder number">Hours</div>
      <label class="mdc-text-field mdc-text-field--outlined"
             for="@($"{Model.ViewComponentViewModel.QuestionKey}_{Model.ViewComponentViewModel.StageTitle}_{Model.ViewComponentViewModel.ControlCounter}")"
             id="@($"{Model.ViewComponentViewModel.QuestionKey}_{Model.ViewComponentViewModel.StageTitle}_{Model.ViewComponentViewModel.ControlCounter}_HRlabel")"
             aria-label="enter a number">
        <span class="mdc-notched-outline">
          <span class="mdc-notched-outline__leading"></span>
          <span class="mdc-notched-outline__notch">
            <span class="mdc-floating-label" id="my-label-id"></span>
          </span>
          <span class="mdc-notched-outline__trailing"></span>
        </span>
        <input type="number"
               class="mdc-text-field__input numeric-text inputContainer persistable"
               name="@(Model.ViewComponentViewModel.QuestionKey)"
               id="@($"{Model.ViewComponentViewModel.QuestionKey}_{Model.ViewComponentViewModel.StageTitle}_{Model.ViewComponentViewModel.ControlCounter}")" )"
               value="@(originalAnswer == null ? string.Empty : originalAnswer?.Description)"
               title="@(originalAnswer == null ? string.Empty : $"Answered by {originalAnswer.ByUser}")"
               maxlength="3" min="0" max="100"
               placeholder="enter a number"
               data-oldvalue="@(originalAnswer == null ? "" : originalAnswer?.Description)"
               data-questionid="@(Model.ViewComponentViewModel.QuestionID)"
               data-questionkey="@(Model.ViewComponentViewModel.QuestionKey)"
               data-userid="@(Model.ViewComponentViewModel.UserID)"
               data-episodeid="@(originalAnswer == null ? "" : originalAnswer.EpisodeOfCare.EpisodeOfCareID)"
               data-answerSequence="@(originalAnswer == null ? "" : originalAnswer.AnswerSequenceNumber)"
               data-toggle="tooltip"
               data-placement="left"
               aria-labelledby="@($"{Model.ViewComponentViewModel.QuestionKey}_{Model.ViewComponentViewModel.StageTitle}_{Model.ViewComponentViewModel.ControlCounter}_HRlabel")" />
      </label>
    </div>
  </div>
</div>