@model List<ChoiceViewModel>
@{
  string originalValue = string.Empty;
  originalValue = string.Join(",", System.Text.Json.JsonSerializer.Serialize(Model.Where(x => x.Selected).Select(x=>x.ChoiceID)));
}
<div class="flex-start-column-wrap">
  @foreach (var item in Model)
  {
    <div class="mdc-form-field">
      <div class="mdc-checkbox">
        <input type="checkbox" class="mdc-checkbox__native-control persistable"
          name="@(item.QuestionKey)-@(item.ChoiceID)" id="@(item.QuestionKey)-@(item.ChoiceID)"
          value="@item.ChoiceID" checked="@item.Selected"
          data-questionid="@item.QuestionID" data-questionkey="@item.QuestionKey" data-userid="@ViewData["UserID"]"
          data-useranswerid="@item.UserAnswerID" data-oldvalue="@originalValue"
          data-answersetid="@item.AnswerSetID"
          data-toggle="tooltip" data-placement="left" 
          title="@(!string.IsNullOrEmpty(item.AnsweredBy) ? string.Format("Answered by {0}", item.AnsweredBy) : "")">
        <span asp-validataion-for="@(item.QuestionKey)-@(item.ChoiceID)"></span>
        
        <div class="mdc-checkbox__background">
          <svg class="mdc-checkbox__checkmark"
               viewBox="0 0 24 24">
            <path class="mdc-checkbox__checkmark-path"
                  fill="none"
                  d="M1.73,12.91 8.1,19.28 22.79,4.59"></path>
          </svg>
          <div class="mdc-checkbox__mixedmark"></div>
        </div>
        <div class="mdc-checkbox__ripple"></div>
      </div>
      <label for="@(item.QuestionKey)-@(item.ChoiceID)">@item.ChoiceDescription</label>
    </div>
  }
</div>