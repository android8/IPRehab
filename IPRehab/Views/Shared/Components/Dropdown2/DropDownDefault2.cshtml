@model List<ChoiceViewModel>
@{
  string originalChoiceID = string.Empty;
  int? answerSetID = Model.First()?.AnswerSetID;
  ChoiceViewModel checkedOption = Model.Where(x => x.Selected).FirstOrDefault();
  if (checkedOption != null)
  {
    originalChoiceID = checkedOption.ChoiceID.ToString();
    answerSetID = checkedOption.AnswerSetID;
  }
}
<select class="browser-default custom-select persistable" name="@ViewData["QuestionKey"]" id="@ViewData["QuestionKey"]"
        data-questionid="@ViewData["QuestionID"]" data-questionkey="@ViewData["QuestionKey"]" data-userid="@ViewData["UserID"]"
        data-useranswerid="@ViewData["UserAnswerID"]" data-oldvalue="@originalChoiceID" 
        data-answersetid ="@(answerSetID != null ? answerSetID.Value : 0)"
        data-toggle="tooltip" data-placement="left" 
        title="@(!string.IsNullOrEmpty(checkedOption?.AnsweredBy) ? string.Format("Answered by {0}", checkedOption.AnsweredBy) : "")">

  <option data-questionid="@ViewData["QuestionID"]" data-questionkey="@ViewData["QuestionKey"]" data-userid="@ViewData["UserID"]"
          data-useranswerid="@ViewData["UserAnswerID"]" data-oldvalue="@originalChoiceID"></option>

  @foreach (var item in Model)
  {
    <option value="@item.ChoiceID" selected="@item.Selected" 
            data-questionid="@ViewData["QuestionID"]" data-questionkey="@ViewData["QuestionKey"]" data-userid="@ViewData["UserID"]"
            data-useranswerid="@ViewData["UserAnswerID"]" data-oldvalue="@originalChoiceID">
      @item.ChoiceDescription
    </option>
  }
</select>