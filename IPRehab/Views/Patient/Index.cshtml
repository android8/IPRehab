@model IEnumerable<IPRehabWebAPI2.Models.PatientDTO>

@{
  ViewData["Title"] = "Index";
  Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Scripts {
  @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
  <script type="module" src="~/js/app/app.js"></script>
}

  <div class="flex-column">
    <div>
      <h1 class="fixed">Patients</h1>
    </div>
    <div class="paddingTop">
      <input id="searchCriteria" type="text" placeholder="enter a critera" title="criteria are like the text in the table column such as 1V01 or 64" value="@ViewBag.PreviousCriteria" />
      <a id="search" asp-action="Index" asp-route-criteria="" class="btn-sm btn-info">Search</a>&nbsp;<span id="previousCriteria"></span>&nbsp;<span id="recordCount">@Model.Count() records</span>
    </div>
    <div>
      <table class="table-responsive-md table-bordered">
        <thead>
          <tr>
            <th></th>
            <th>
              @Html.DisplayNameFor(model => model.VISN)
            </th>
            <th>
              @Html.DisplayNameFor(model => model.Facility)
            </th>
            <th>
              @Html.DisplayNameFor(model => model.District)
            </th>
            <th>
              @Html.DisplayNameFor(model => model.Division)
            </th>
            <th>
              @Html.DisplayNameFor(model => model.Sta6aKey)
            </th>
            <th>
              @Html.DisplayNameFor(model => model.Bedsecn)
            </th>
            <th>
              @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
              @Html.DisplayNameFor(model => model.PTFSSN)
            </th>
            <th>
              @Html.DisplayNameFor(model => model.FiscalPeriod)
            </th>
          </tr>
        </thead>
        <tbody>
          @{int row = 0; }
          @foreach (var item in Model)
          {
          <!--Patient row-->
          <tr class="patientRow">
            <td>@(++row)</td>
            <td>
              @Html.DisplayFor(modelItem => item.VISN)
            </td>
            <td>
              @Html.DisplayFor(modelItem => item.Facility)
            </td>
            <td>
              @Html.DisplayFor(modelItem => item.District)
            </td>
            <td>
              @Html.DisplayFor(modelItem => item.Division)
            </td>
            <td>
              @Html.DisplayFor(modelItem => item.Sta6aKey)
            </td>
            <td>
              @Html.DisplayFor(modelItem => item.Bedsecn)
            </td>
            <td>
              @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
              @Html.DisplayFor(modelItem => item.PTFSSN)
            </td>
            <td>
              @Html.DisplayFor(modelItem => item.FiscalPeriod)
            </td>
          </tr>

          <!--Episode of Care row-->
          @if (item.CareEpisodes?.Count() != 0)
          {
          <tr>
            <td colspan="10" class="text-danger">
              No epside of care
            </td>
          </tr>
          }
          else
          {
          <tr>
            <td colspan="10">
              <table class="table-striped table-responsive-md table-bordered">
                <thead>
                  <tr>
                    <th></th>
                    <th>
                      @Html.DisplayNameFor(modelItem => item.CareEpisodes.First().EpisodeOfCareId)
                    </th>
                    <th>
                      @Html.DisplayNameFor(modelItem => item.CareEpisodes.First().AdmissionDate)
                    </th>
                    <th>
                      @Html.DisplayNameFor(modelItem => item.CareEpisodes.First().OnsetDate)
                    </th>
                    <th>
                      @Html.DisplayNameFor(modelItem => item.CareEpisodes.First().PatientIcnfk)
                    </th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td>
                      <div class="flex-sm-row commandBtn">
                        <a asp-controller="Episode" asp-action="Create" asp-route-patientid="@item.PTFSSN" class="badge badge-primary" title="create new episode of care">N</a>
                        <a asp-controller="question" asp-action="Edit" asp-route-stage="Initial" class="badge badge-info" title="Edit episode of care initial questions">I</a>
                        <a asp-controller="question" asp-action="Edit" asp-route-stage="Interim" class="badge badge-secondary" title="Edit episode of care interim questions">I</a>
                        <a asp-controller="question" asp-action="Edit" asp-route-stage="Discharge" class="badge badge-success" title="Edit episode of care discharge questions">D</a>
                        <a asp-controller="question" asp-action="Edit" asp-route-stage="Followup" class="badge badge-warning" title="Edit episode of care discharge questions">F</a>
                      </div>
                    </td>
                    <td>Sample</td>
                    <td>Sample</td>
                    <td>Sample</td>
                    <td>Sample</td>
                  </tr>
                  <tr>
                    <td>
                      <div class="flex-sm-row commandBtn">
                        <a asp-controller="Episode" asp-action="Create" asp-route-patientid="@item.PTFSSN" class="badge badge-primary" title="create new episode of care">N</a>
                        <a asp-controller="question" asp-action="Edit" asp-route-stage="Initial" class="badge badge-info" title="Edit episode of care initial questions">I</a>
                        <a asp-controller="question" asp-action="Edit" asp-route-stage="Interim" class="badge badge-secondary" title="Edit episode of care interim questions">I</a>
                        <a asp-controller="question" asp-action="Edit" asp-route-stage="Discharge" class="badge badge-success" title="Edit episode of care discharge questions">D</a>
                        <a asp-controller="question" asp-action="Edit" asp-route-stage="Followup" class="badge badge-warning" title="Edit episode of care discharge questions">F</a>
                      </div>
                    </td>
                    <td>Sample</td>
                    <td>Sample</td>
                    <td>Sample</td>
                    <td>Sample</td>
                  </tr>
                  @foreach (var episode in item.CareEpisodes)
                  {
                  <tr>
                    <td>
                      <div class="flex-sm-row">
                        <a asp-controller="Episode" asp-action="Create" asp-route-patientid="@item.PTFSSN" class="btn-sm btn-primary" title="create new episode of care">N</a>
                        <a asp-action="EditAsync" asp-route-stage="Initial" class="badge badge-info" title="Edit episode of care initial questions">I</a>
                        <a asp-action="EditAsync" asp-route-stage="Interim" class="badge badge-secondary" title="Edit episode of care interim questions">I</a>
                        <a asp-action="EditAsync" asp-route-stage="Discharge" class="badge badge-success" title="Edit episode of care discharge questions">D</a>
                        <a asp-action="EditAsync" asp-route-stage="Followup" class="badge badge-warning" title="Edit episode of care discharge questions">F</a>
                      </div>
                    </td>
                    <td>
                      @Html.DisplayFor(modelItem => episode.EpisodeOfCareId)
                    </td>
                    <td>
                      @Html.DisplayFor(modelItem => episode.AdmissionDate)
                    </td>
                    <td>
                      @Html.DisplayFor(modelItem => episode.OnsetDate)
                    </td>
                    <td>
                      @Html.DisplayFor(modelItem => episode.PatientIcnfk)
                    </td>
                  </tr>
                  }
                </tbody>
              </table>
            </td>
          </tr>
          }
          }
        </tbody>
      </table>
    </div>
  </div>