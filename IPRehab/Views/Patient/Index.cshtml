@model IEnumerable<IPRehabWebAPI2.Models.PatientDTO>

@{
  ViewData["Title"] = "Index";
  Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Scripts {
  @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
  <script type="module" src="~/js/app/patientList.js" asp-append-version="true"></script>
  <script type="module" src="~/js/app/form.js" asp-append-version="true"></script>
  <script type="text/javascript">

  </script>
}

<div class="flex-column">
  @{await Html.RenderPartialAsync("_SearchPartial", Model.Count());}
  <div>
    <table class="table-responsive-md table-bordered">
      <thead>
        <tr>
          <th></th>
          <th>
            @Html.DisplayNameFor(model => model.VISN)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.Facility)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.District)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.Division)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.Sta6aKey)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.Bedsecn)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.Name)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.PTFSSN)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.FiscalPeriod)
          </th>
        </tr>
      </thead>
      <tbody>
        @{
          int row = 0;
          foreach (var patient in Model)
          {
            <!--Patient row-->
            <tr class="patientRow">
              <td><div class="nav-pills">@(++row)</div></td>
              <td>
                @Html.DisplayFor(modelItem => patient.VISN)
              </td>
              <td>
                @Html.DisplayFor(modelItem => patient.Facility)
              </td>
              <td>
                @Html.DisplayFor(modelItem => patient.District)
              </td>
              <td>
                @Html.DisplayFor(modelItem => patient.Division)
              </td>
              <td>
                @Html.DisplayFor(modelItem => patient.Sta6aKey)
              </td>
              <td>
                @Html.DisplayFor(modelItem => patient.Bedsecn)
              </td>
              <td>
                @Html.DisplayFor(modelItem => patient.Name)
              </td>
              <td>
                @Html.DisplayFor(modelItem => patient.PTFSSN)
              </td>
              <td>
                @Html.DisplayFor(modelItem => patient.FiscalPeriod)
              </td>
            </tr>

            <!--Episode of Care row-->
            @if (!patient.CareEpisodes.Any())
            {
              <tr>
                <td colspan="10" class="text-danger">
                  <div class="flex-start-row-nowrap">
                    <div>No episode of care&nbsp;</div>
                    <div>
                      @{await Html.RenderPartialAsync("_RehabActionBtns",
                                              new RehabActionViewModel()
                                              {
                                                EpisodeID = -1,
                                                PatientID = patient.PTFSSN
                                              });
                      }
                    </div>
                  </div>
                </td>
              </tr>
            }
            else
            {
              <tr>
                <td colspan="10">
                  <table class="table-striped table-responsive-md table-bordered">
                    <thead>
                      <tr>
                        <th></th>
                        <th>
                          @Html.DisplayNameFor(modelItem => patient.CareEpisodes.First().EpisodeOfCareID)
                        </th>
                        <th>
                          @Html.DisplayNameFor(modelItem => patient.CareEpisodes.First().AdmissionDate)
                        </th>
                        <th>
                          @Html.DisplayNameFor(modelItem => patient.CareEpisodes.First().OnsetDate)
                        </th>
                        <th>
                          @Html.DisplayNameFor(modelItem => patient.CareEpisodes.First().PatientIcnFK)
                        </th>
                      </tr>
                    </thead>
                    <tbody>
                      @foreach (var episode in patient.CareEpisodes)
                      {
                        <tr>
                          <td>
                            @{await Html.RenderPartialAsync("_RehabActionBtns",
                                      new RehabActionViewModel()
                                      {
                                        EpisodeID = episode.EpisodeOfCareID,
                                        PatientID = episode.PatientIcnFK
                                      });
                            }
                          </td>
                          <td>
                            @Html.DisplayFor(modelItem => episode.EpisodeOfCareID)
                          </td>
                          <td>
                            @Html.DisplayFor(modelItem => episode.AdmissionDate)
                          </td>
                          <td>
                            @Html.DisplayFor(modelItem => episode.OnsetDate)
                          </td>
                          <td>
                            @Html.DisplayFor(modelItem => episode.PatientIcnFK)
                          </td>
                        </tr>
                      }
                    </tbody>
                  </table>
                </td>
              </tr>
            }
          }
        }
      </tbody>
    </table>
  </div>
</div>