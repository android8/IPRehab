@model PatientListViewModel

@{
  ViewData["Title"] = "Index";
  Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Scripts {
  @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
  <script type="module" src="~/js/app/patientList.js" asp-append-version="true"></script>
  <script type="module" src="~/js/app/form.js" asp-append-version="true"></script>
  <script type="text/javascript">
    $(function () {
      $(".disabled").removeClass("disabled"); //delay enabling command buttons under render is completed 
    });
  </script>
}

<div class="flex-column paddingTop">
  @{await Html.RenderPartialAsync("_SearchPartial", Model);}
  <div>
    <table class="table-responsive-md table-bordered">
      <thead>
        <tr>
          <th></th>
          <th>
            @Html.DisplayNameFor(model => model.Patients.First().Patient.VISN)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.Patients.First().Patient.Facility)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.Patients.First().Patient.District)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.Patients.First().Patient.Division)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.Patients.First().Patient.Sta6aKey)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.Patients.First().Patient.Bedsecn)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.Patients.First().Patient.Name)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.Patients.First().Patient.PTFSSN)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.Patients.First().Patient.FiscalPeriod)
          </th>
        </tr>
      </thead>
      <tbody>
        @{
          int row = 0;
          foreach (var pat in Model.Patients)
          {
            <!--Patient row-->
            <tr class="patientRow">
              <td>@(++row)</td>
              <td>
                @Html.DisplayFor(modelItem => pat.Patient.VISN)
              </td>
              <td>
                @Html.DisplayFor(modelItem => pat.Patient.Facility)
              </td>
              <td>
                @Html.DisplayFor(modelItem => pat.Patient.District)
              </td>
              <td>
                @Html.DisplayFor(modelItem => pat.Patient.Division)
              </td>
              <td>
                @Html.DisplayFor(modelItem => pat.Patient.Sta6aKey)
              </td>
              <td>
                @Html.DisplayFor(modelItem => pat.Patient.Bedsecn)
              </td>
              <td>
                @Html.DisplayFor(modelItem => pat.Patient.Name)
              </td>
              <td>
                @Html.DisplayFor(modelItem => pat.Patient.PTFSSN)
              </td>
              <td>
                @Html.DisplayFor(modelItem => pat.Patient.FiscalPeriod)
              </td>
            </tr>

            <!--Episode of Care row-->
            @if (!pat.Patient.CareEpisodes.Any())
            {
              <tr>
                <td colspan="10" class="text-danger">
                  <div class="flex-start-row-nowrap">
                    <div>No episode of care&nbsp;</div>
                    <div>
                      @{await Html.RenderPartialAsync("_RehabActionBtns", pat.ActionButtonVM);}
                    </div>
                  </div>
                </td>
              </tr>
            }
            else
            {
              <tr>
                <td colspan="10">
                  <table class="table-striped table-responsive-md table-bordered">
                    <thead>
                      <tr>
                        <th></th>
                        <th>
                          @Html.DisplayNameFor(modelItem => pat.Patient.CareEpisodes.First().EpisodeOfCareID)
                        </th>
                        <th>
                          @Html.DisplayNameFor(modelItem => pat.Patient.CareEpisodes.First().AdmissionDate)
                        </th>
                        <th>
                          @Html.DisplayNameFor(modelItem => pat.Patient.CareEpisodes.First().OnsetDate)
                        </th>
                        <th>
                          @Html.DisplayNameFor(modelItem => pat.Patient.CareEpisodes.First().PatientIcnFK)
                        </th>
                      </tr>
                    </thead>
                    <tbody>

                      @foreach (var episode in pat.Patient.CareEpisodes)
                      {
                        <tr>
                          <td>
                            @{await Html.RenderPartialAsync("_RehabActionBtns", pat.ActionButtonVM);}
                          </td>
                          <td>
                            @Html.DisplayFor(modelItem => episode.EpisodeOfCareID)
                          </td>
                          <td>
                            @Html.DisplayFor(modelItem => episode.AdmissionDate)
                          </td>
                          <td>
                            @Html.DisplayFor(modelItem => episode.OnsetDate)
                          </td>
                          <td>
                            @Html.DisplayFor(modelItem => episode.PatientIcnFK)
                          </td>
                        </tr>
                      }
                    </tbody>
                  </table>
                </td>
              </tr>
            }
          }
        }
      </tbody>
    </table>
  </div>
</div>